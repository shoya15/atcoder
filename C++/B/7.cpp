/*
文字列 A が与えられる。小文字アルファベット(a-z)のみを使って辞書順比較したとき文字列 A より小さいものを1つ何でも良いので出力せよ。ただし、文字列は 1 文字以上 100 文字以下でなければならない。もし存在しない場合は "-1" を出力せよ。
ただし、ある文字列 S=S_1 S_2...S_nと T=T_1 T_2...T_mについて、辞書順比較した際に S＜T であるとは、次のどちらか一方の状態が成り立っていることを言う。
ある整数 i(1≦i≦min(n,m)) に関して、 1≦j≦i−1 を満たすどの整数 j に関しても S_j=T_jが成立し、かつ S_i＜T_iが成立する
任意の整数 i(1≦i≦min(n,m)) に関して、 常に S_i=T_iが成立し、かつ ∣S∣＜∣T∣ である。ただし ∣X∣ は文字列 X の長さを表すものとする。
なにやら頭が痛くなる記述だが、言い換えると次の通りである。
それぞれの文字列の同じ位置同士を先頭から比較していって、初めて不一致になったら、その文字同士の(アルファベットでの)比較結果が文字列の全体の比較結果である。 例えば、"abcd" と "ax" を比較すると、2 文字目で、′b < xとなるので、"abcd"<"ax" である。
もし、比較している途中で片方の文字列が尽きてしまったら、文字列の長さが短い方が小さい。例えば "ab"<"abc"である。
*/
#include <iostream>
#include <string>
using namespace std;
int main()
{
    string a;
    cin >> a;
    if (a == "a")
        cout << "-1\n";
    else
        cout << "a\n";
}